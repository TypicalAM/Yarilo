# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SnifferStub(object):
    """The Sniffer service is responsible for capturing data from a file or a
    network interface card and relaying the data to clients.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SnifferCreate = channel.unary_unary(
                '/proto.Sniffer/SnifferCreate',
                request_serializer=service__pb2.SnifferCreateRequest.SerializeToString,
                response_deserializer=service__pb2.SnifferID.FromString,
                _registered_method=True)
        self.SnifferDestroy = channel.unary_unary(
                '/proto.Sniffer/SnifferDestroy',
                request_serializer=service__pb2.SnifferID.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                _registered_method=True)
        self.SnifferList = channel.unary_unary(
                '/proto.Sniffer/SnifferList',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.SnifferListResponse.FromString,
                _registered_method=True)
        self.AccessPointList = channel.unary_unary(
                '/proto.Sniffer/AccessPointList',
                request_serializer=service__pb2.SnifferID.SerializeToString,
                response_deserializer=service__pb2.APListResponse.FromString,
                _registered_method=True)
        self.AccessPointGet = channel.unary_unary(
                '/proto.Sniffer/AccessPointGet',
                request_serializer=service__pb2.APGetRequest.SerializeToString,
                response_deserializer=service__pb2.APGetResponse.FromString,
                _registered_method=True)
        self.AccessPointProvidePassword = channel.unary_unary(
                '/proto.Sniffer/AccessPointProvidePassword',
                request_serializer=service__pb2.APProvidePasswordRequest.SerializeToString,
                response_deserializer=service__pb2.APProvidePasswordResponse.FromString,
                _registered_method=True)
        self.AccessPointGetDecryptedStream = channel.unary_stream(
                '/proto.Sniffer/AccessPointGetDecryptedStream',
                request_serializer=service__pb2.APGetDecryptedStreamRequest.SerializeToString,
                response_deserializer=service__pb2.Packet.FromString,
                _registered_method=True)
        self.AccessPointDeauth = channel.unary_unary(
                '/proto.Sniffer/AccessPointDeauth',
                request_serializer=service__pb2.APDeauthRequest.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                _registered_method=True)
        self.AccessPointDeauthClient = channel.unary_unary(
                '/proto.Sniffer/AccessPointDeauthClient',
                request_serializer=service__pb2.APDeauthClientRequest.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                _registered_method=True)
        self.AccessPointGetHash = channel.unary_unary(
                '/proto.Sniffer/AccessPointGetHash',
                request_serializer=service__pb2.APGetHashRequest.SerializeToString,
                response_deserializer=service__pb2.APGetHashResponse.FromString,
                _registered_method=True)
        self.AccessPointIgnore = channel.unary_unary(
                '/proto.Sniffer/AccessPointIgnore',
                request_serializer=service__pb2.APIgnoreRequest.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                _registered_method=True)
        self.AccessPointListIgnored = channel.unary_unary(
                '/proto.Sniffer/AccessPointListIgnored',
                request_serializer=service__pb2.SnifferID.SerializeToString,
                response_deserializer=service__pb2.APListResponse.FromString,
                _registered_method=True)
        self.AccessPointCreateRecording = channel.unary_unary(
                '/proto.Sniffer/AccessPointCreateRecording',
                request_serializer=service__pb2.APCreateRecordingRequest.SerializeToString,
                response_deserializer=service__pb2.APCreateRecordingResponse.FromString,
                _registered_method=True)
        self.FocusStart = channel.unary_unary(
                '/proto.Sniffer/FocusStart',
                request_serializer=service__pb2.FocusStartRequest.SerializeToString,
                response_deserializer=service__pb2.FocusStartResponse.FromString,
                _registered_method=True)
        self.FocusGetActive = channel.unary_unary(
                '/proto.Sniffer/FocusGetActive',
                request_serializer=service__pb2.SnifferID.SerializeToString,
                response_deserializer=service__pb2.FocusGetActiveResponse.FromString,
                _registered_method=True)
        self.FocusStop = channel.unary_unary(
                '/proto.Sniffer/FocusStop',
                request_serializer=service__pb2.SnifferID.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                _registered_method=True)
        self.RecordingCreate = channel.unary_unary(
                '/proto.Sniffer/RecordingCreate',
                request_serializer=service__pb2.RecordingCreateRequest.SerializeToString,
                response_deserializer=service__pb2.RecordingCreateResponse.FromString,
                _registered_method=True)
        self.RecordingList = channel.unary_unary(
                '/proto.Sniffer/RecordingList',
                request_serializer=service__pb2.RecordingListRequest.SerializeToString,
                response_deserializer=service__pb2.RecordingListResponse.FromString,
                _registered_method=True)
        self.RecordingLoadDecrypted = channel.unary_stream(
                '/proto.Sniffer/RecordingLoadDecrypted',
                request_serializer=service__pb2.RecordingLoadDecryptedRequest.SerializeToString,
                response_deserializer=service__pb2.Packet.FromString,
                _registered_method=True)
        self.NetworkInterfaceList = channel.unary_unary(
                '/proto.Sniffer/NetworkInterfaceList',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.NetworkInterfaceListResponse.FromString,
                _registered_method=True)
        self.LogGetStream = channel.unary_stream(
                '/proto.Sniffer/LogGetStream',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.LogEntry.FromString,
                _registered_method=True)
        self.BatteryGetLevel = channel.unary_unary(
                '/proto.Sniffer/BatteryGetLevel',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.BatteryGetLevelResponse.FromString,
                _registered_method=True)


class SnifferServicer(object):
    """The Sniffer service is responsible for capturing data from a file or a
    network interface card and relaying the data to clients.
    """

    def SnifferCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SnifferDestroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SnifferList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointProvidePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointGetDecryptedStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointDeauth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointDeauthClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointGetHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointIgnore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointListIgnored(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccessPointCreateRecording(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FocusStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FocusGetActive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FocusStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordingCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordingList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordingLoadDecrypted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NetworkInterfaceList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogGetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatteryGetLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnifferServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SnifferCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.SnifferCreate,
                    request_deserializer=service__pb2.SnifferCreateRequest.FromString,
                    response_serializer=service__pb2.SnifferID.SerializeToString,
            ),
            'SnifferDestroy': grpc.unary_unary_rpc_method_handler(
                    servicer.SnifferDestroy,
                    request_deserializer=service__pb2.SnifferID.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
            'SnifferList': grpc.unary_unary_rpc_method_handler(
                    servicer.SnifferList,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.SnifferListResponse.SerializeToString,
            ),
            'AccessPointList': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointList,
                    request_deserializer=service__pb2.SnifferID.FromString,
                    response_serializer=service__pb2.APListResponse.SerializeToString,
            ),
            'AccessPointGet': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointGet,
                    request_deserializer=service__pb2.APGetRequest.FromString,
                    response_serializer=service__pb2.APGetResponse.SerializeToString,
            ),
            'AccessPointProvidePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointProvidePassword,
                    request_deserializer=service__pb2.APProvidePasswordRequest.FromString,
                    response_serializer=service__pb2.APProvidePasswordResponse.SerializeToString,
            ),
            'AccessPointGetDecryptedStream': grpc.unary_stream_rpc_method_handler(
                    servicer.AccessPointGetDecryptedStream,
                    request_deserializer=service__pb2.APGetDecryptedStreamRequest.FromString,
                    response_serializer=service__pb2.Packet.SerializeToString,
            ),
            'AccessPointDeauth': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointDeauth,
                    request_deserializer=service__pb2.APDeauthRequest.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
            'AccessPointDeauthClient': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointDeauthClient,
                    request_deserializer=service__pb2.APDeauthClientRequest.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
            'AccessPointGetHash': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointGetHash,
                    request_deserializer=service__pb2.APGetHashRequest.FromString,
                    response_serializer=service__pb2.APGetHashResponse.SerializeToString,
            ),
            'AccessPointIgnore': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointIgnore,
                    request_deserializer=service__pb2.APIgnoreRequest.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
            'AccessPointListIgnored': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointListIgnored,
                    request_deserializer=service__pb2.SnifferID.FromString,
                    response_serializer=service__pb2.APListResponse.SerializeToString,
            ),
            'AccessPointCreateRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.AccessPointCreateRecording,
                    request_deserializer=service__pb2.APCreateRecordingRequest.FromString,
                    response_serializer=service__pb2.APCreateRecordingResponse.SerializeToString,
            ),
            'FocusStart': grpc.unary_unary_rpc_method_handler(
                    servicer.FocusStart,
                    request_deserializer=service__pb2.FocusStartRequest.FromString,
                    response_serializer=service__pb2.FocusStartResponse.SerializeToString,
            ),
            'FocusGetActive': grpc.unary_unary_rpc_method_handler(
                    servicer.FocusGetActive,
                    request_deserializer=service__pb2.SnifferID.FromString,
                    response_serializer=service__pb2.FocusGetActiveResponse.SerializeToString,
            ),
            'FocusStop': grpc.unary_unary_rpc_method_handler(
                    servicer.FocusStop,
                    request_deserializer=service__pb2.SnifferID.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
            'RecordingCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordingCreate,
                    request_deserializer=service__pb2.RecordingCreateRequest.FromString,
                    response_serializer=service__pb2.RecordingCreateResponse.SerializeToString,
            ),
            'RecordingList': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordingList,
                    request_deserializer=service__pb2.RecordingListRequest.FromString,
                    response_serializer=service__pb2.RecordingListResponse.SerializeToString,
            ),
            'RecordingLoadDecrypted': grpc.unary_stream_rpc_method_handler(
                    servicer.RecordingLoadDecrypted,
                    request_deserializer=service__pb2.RecordingLoadDecryptedRequest.FromString,
                    response_serializer=service__pb2.Packet.SerializeToString,
            ),
            'NetworkInterfaceList': grpc.unary_unary_rpc_method_handler(
                    servicer.NetworkInterfaceList,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.NetworkInterfaceListResponse.SerializeToString,
            ),
            'LogGetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.LogGetStream,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.LogEntry.SerializeToString,
            ),
            'BatteryGetLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.BatteryGetLevel,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.BatteryGetLevelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Sniffer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.Sniffer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Sniffer(object):
    """The Sniffer service is responsible for capturing data from a file or a
    network interface card and relaying the data to clients.
    """

    @staticmethod
    def SnifferCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/SnifferCreate',
            service__pb2.SnifferCreateRequest.SerializeToString,
            service__pb2.SnifferID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SnifferDestroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/SnifferDestroy',
            service__pb2.SnifferID.SerializeToString,
            service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SnifferList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/SnifferList',
            service__pb2.Empty.SerializeToString,
            service__pb2.SnifferListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointList',
            service__pb2.SnifferID.SerializeToString,
            service__pb2.APListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointGet',
            service__pb2.APGetRequest.SerializeToString,
            service__pb2.APGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointProvidePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointProvidePassword',
            service__pb2.APProvidePasswordRequest.SerializeToString,
            service__pb2.APProvidePasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointGetDecryptedStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/proto.Sniffer/AccessPointGetDecryptedStream',
            service__pb2.APGetDecryptedStreamRequest.SerializeToString,
            service__pb2.Packet.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointDeauth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointDeauth',
            service__pb2.APDeauthRequest.SerializeToString,
            service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointDeauthClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointDeauthClient',
            service__pb2.APDeauthClientRequest.SerializeToString,
            service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointGetHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointGetHash',
            service__pb2.APGetHashRequest.SerializeToString,
            service__pb2.APGetHashResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointIgnore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointIgnore',
            service__pb2.APIgnoreRequest.SerializeToString,
            service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointListIgnored(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointListIgnored',
            service__pb2.SnifferID.SerializeToString,
            service__pb2.APListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccessPointCreateRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/AccessPointCreateRecording',
            service__pb2.APCreateRecordingRequest.SerializeToString,
            service__pb2.APCreateRecordingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FocusStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/FocusStart',
            service__pb2.FocusStartRequest.SerializeToString,
            service__pb2.FocusStartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FocusGetActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/FocusGetActive',
            service__pb2.SnifferID.SerializeToString,
            service__pb2.FocusGetActiveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FocusStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/FocusStop',
            service__pb2.SnifferID.SerializeToString,
            service__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecordingCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/RecordingCreate',
            service__pb2.RecordingCreateRequest.SerializeToString,
            service__pb2.RecordingCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecordingList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/RecordingList',
            service__pb2.RecordingListRequest.SerializeToString,
            service__pb2.RecordingListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecordingLoadDecrypted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/proto.Sniffer/RecordingLoadDecrypted',
            service__pb2.RecordingLoadDecryptedRequest.SerializeToString,
            service__pb2.Packet.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NetworkInterfaceList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/NetworkInterfaceList',
            service__pb2.Empty.SerializeToString,
            service__pb2.NetworkInterfaceListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LogGetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/proto.Sniffer/LogGetStream',
            service__pb2.Empty.SerializeToString,
            service__pb2.LogEntry.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatteryGetLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.Sniffer/BatteryGetLevel',
            service__pb2.Empty.SerializeToString,
            service__pb2.BatteryGetLevelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
